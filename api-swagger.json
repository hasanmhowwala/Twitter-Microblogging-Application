{
    "openapi": "3.0.0",
    "paths": {
        "/post-service/post/{postId}": {
            "get": {
                "operationId": "PostsController_getPostById",
                "summary": "Gets a post by its ID",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post with the given ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PopulatedPost"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post-service/posts": {
            "get": {
                "operationId": "PostsController_getPostsByIds",
                "summary": "Gets a list of post by a comma separated list of IDs",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of posts with the given IDs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpopulatedPost"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post-service/me/posts": {
            "get": {
                "operationId": "PostsController_getUsersPosts",
                "summary": "Gets a list of post created by the authenticated user",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of posts with the given IDs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpopulatedPost"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post-service/me/post": {
            "post": {
                "operationId": "PostsController_createPost",
                "summary": "Creates a post with the given content",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The created Post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PopulatedPost"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post-service/me/post/{postId}": {
            "patch": {
                "operationId": "PostsController_updatePost",
                "summary": "Updates a post with the id of :postId with the given content",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The created Post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PopulatedPost"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PostsController_deletePost",
                "summary": "Deletes a post with the id of :postId",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post-service/post/{postId}/like": {
            "post": {
                "operationId": "PostsController_likePost",
                "summary": "Adds a like to a post with the id of :postId",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PostsController_unlikePost",
                "summary": "Removes a like to a post with the id of :postId",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post-service/post/{postId}/comment": {
            "post": {
                "operationId": "PostsController_createComment",
                "summary": "Adds a comment with the given content to a post with the id of :postId",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The created comment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post-service/post/{postId}/comment/{commentId}": {
            "delete": {
                "operationId": "PostsController_deleteComment",
                "summary": "Removes a comment from the post with the id of :postId",
                "parameters": [
                    {
                        "name": "postId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "commentId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/follow-service/": {
            "get": {
                "operationId": "AppController_getHello",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/follow-service/users/me": {
            "put": {
                "operationId": "UsersController_create",
                "summary": "Creates/Updates the current user based on their auth0 profile",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Created User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/follow-service/users/search": {
            "get": {
                "operationId": "UsersController_search",
                "summary": "Finds users matching the search term",
                "parameters": [
                    {
                        "name": "search",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users matching the search term",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/follow-service/users": {
            "get": {
                "operationId": "UsersController_findAll",
                "summary": "Finds users from a comma separated list of ids",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users with the given ids",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/follow-service/users/{id}": {
            "get": {
                "operationId": "UsersController_findOne",
                "summary": "Gets a user by id",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A users with the given id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/follow-service/users/me/follow/{followeeId}": {
            "post": {
                "operationId": "UsersController_follow",
                "summary": "Adds a follower -> followee relationship between the currentUser and the user with followeeId",
                "parameters": [
                    {
                        "name": "followeeId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "UsersController_unfollow",
                "summary": "Removes a follower -> followee relationship between the currentUser and the user with followeeId",
                "parameters": [
                    {
                        "name": "followeeId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/follow-service/users/me/followers": {
            "get": {
                "operationId": "UsersController_currentUserfollowers",
                "summary": "Gets a list of the current users followers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of users following the current user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/follow-service/users/me/following": {
            "get": {
                "operationId": "UsersController_currentUserfollowing",
                "summary": "Gets a list of the users the current user follows",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of users  the current user is following",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/follow-service/users/{userId}/followers": {
            "get": {
                "operationId": "UsersController_followers",
                "summary": "Gets a list of the users the user with userId follows",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users  the user with userId is following",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/follow-service/users/{userId}/following": {
            "get": {
                "operationId": "UsersController_following",
                "summary": "Gets a list of the users the user with userId follows",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users the user with userId is following",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feed-service/{userId}": {
            "get": {
                "operationId": "FeedController_getFeed",
                "summary": "\n    Gets the ids of the posts in the user with id: userId 's feed. \n    These can be used in conjunction with the post\n    service to get full posts\n    ",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of the postId of the posts in the user feed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "info": {
        "title": "Chatwave API",
        "description": "Chatwave API Documentation",
        "version": "1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "post",
            "description": ""
        },
        {
            "name": "follow",
            "description": ""
        },
        {
            "name": "feed",
            "description": ""
        }
    ],
    "servers": [],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "PopulatedPost": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "6561c10fd5d828913a58ba2f",
                        "description": "The unique identifier of the post"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a posts, it is a very good post",
                        "description": "The content/tweet of the post"
                    },
                    "createdAt": {
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the user was created in auth0"
                    },
                    "updatedAt": {
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the user was last updated in auth0"
                    },
                    "likes": {
                        "example": "[\n        { _id: \"123\", \n            _id: \"6563abcfa59f9af017cbbe39\n            likerId: \"auth0|655ae7e187cb3003c86f0f41\", \n            postId: \"6561c10fd5d828913a58ba2f\", \n            createdAt: \"2020-11-24T22:04:07.664Z\", \n            updatedAt: \"2020-11-24T22:04:07.664Z\" \n        }\n    ]",
                        "description": "A list of all the likes on the post",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "comments": {
                        "example": "[\n        { _id: \"123\", \n            commenterId: \"auth0|655ae7e187cb3003c86f0f41\", \n            content: \"This is a comment\", \n            createdAt: \"2020-11-24T22:04:07.664Z\", \n            updatedAt: \"2020-11-24T22:04:07.664Z\" \n        }\n    ]",
                        "description": "A list of all the comments on the post",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "_id",
                    "content",
                    "createdAt",
                    "updatedAt",
                    "likes",
                    "comments"
                ]
            },
            "UnpopulatedPost": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "6561c10fd5d828913a58ba2f",
                        "description": "The unique identifier of the post"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a posts, it is a very good post",
                        "description": "The content/tweet of the post"
                    },
                    "createdAt": {
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the user was created in auth0"
                    },
                    "updatedAt": {
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the user was last updated in auth0"
                    },
                    "likesCount": {
                        "type": "number",
                        "example": "120",
                        "description": "The number of likes on the post"
                    },
                    "commentsCount": {
                        "type": "number",
                        "example": "10",
                        "description": "The number of comments on the post"
                    }
                },
                "required": [
                    "_id",
                    "content",
                    "createdAt",
                    "updatedAt",
                    "likesCount",
                    "commentsCount"
                ]
            },
            "ContentDto": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "example": "This is a post and or comment, it is a very good post and or comment",
                        "description": "The content of a post or comment"
                    }
                },
                "required": ["content"]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "6561c10fd5d828913a58ba2f",
                        "description": "The unique identifier of the like"
                    },
                    "commenterId": {
                        "type": "string",
                        "example": "auth0|655ae7e187cb3003c86f0f41",
                        "description": "The unique identifier of the user who liked the post"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a comment, it is a very good comment",
                        "description": "The content of the comment"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the comment was created"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "6561c10fd5d828913a58ba2f",
                        "description": "The date the comment was last updated"
                    }
                },
                "required": [
                    "_id",
                    "commenterId",
                    "content",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "example": "auth0|5f3c2c3a5e6e5d0069e9e5e0",
                        "description": "The unique identifier of the user"
                    },
                    "email": {
                        "type": "string",
                        "example": "example@gmail.com",
                        "description": "The user's email address"
                    },
                    "name": {
                        "type": "string",
                        "example": "testuser",
                        "description": "The unique name of the User"
                    },
                    "picture": {
                        "type": "string",
                        "example": "https://s.gravatar.com/avatar/5dd4e620ff09450cd4866d8726da24b3?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fja.png",
                        "description": "A link to the users profile image"
                    },
                    "nickname": {
                        "type": "string",
                        "example": "testuser",
                        "description": "The non-unique name of the User"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the user was created in auth0"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2023-11-24T22:04:07.664Z",
                        "description": "The date the user was last updated in auth0"
                    },
                    "role": {
                        "type": "string",
                        "example": "user | admin",
                        "description": "The users role"
                    }
                },
                "required": [
                    "userId",
                    "email",
                    "name",
                    "picture",
                    "nickname",
                    "created_at",
                    "updated_at",
                    "role"
                ]
            }
        }
    }
}
