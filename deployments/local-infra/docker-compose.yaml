# Use root/example as user/password credentials
version: "3.1"

services:
    nginx:
        image: nginx:latest
        restart: always
        volumes:
            - ../../nginx:/etc/nginx/conf.d
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - post-service
            - follow-service
        networks:
            - nginx-network
    rabbitmq:
        image: rabbitmq:3.9.7-management-alpine
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: "guest"
            RABBITMQ_DEFAULT_PASS: "guest"
        networks:
            - rabbit-network

    cache:
        image: redis:6.2-alpine
        restart: always
        ports:
            - "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass password
        volumes:
            - cache:/data
        networks:
            - redis-network

    post-mongo:
        image: mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: postDB
        networks:
            - post-network
    post-service:
        image: sjkchang/chatwave-post-service
        restart: always
        depends_on:
            - post-mongo
            - rabbitmq
        environment:
            MONGO_URL: mongodb://post-mongo
            MONGO_USERNAME: root
            MONGO_PASSWORD: password
            MONGO_DB_NAME: postDB

            REDIS_HOST: cache
            REDIS_PORT: 6379
            REDIS_PASS: password

            AMQP_URL: amqp://rabbitmq

            AUTH_SERVER_URL: ${AUTH0_SERVER_URL}
            AUTH_CLIENT_ID: ${AUTH0_INTERFACE_CLIENT_ID}
        networks:
            - rabbit-network
            - post-network
            - nginx-network
            - redis-network

    neo4j:
        image: neo4j:latest
        restart: always
        ports:
            - "7474:7474"
            - "7687:7687"
        environment:
            NEO4J_AUTH: neo4j/password
        networks:
            - follow-network

    follow-service:
        image: sjkchang/chatwave-follow-service
        restart: always
        depends_on:
            - rabbitmq
        environment:
            AUTH_SERVER_URL: ${AUTH0_SERVER_URL}
            AUTH_CLIENT_ID: ${AUTH0_INTERFACE_CLIENT_ID}

            REDIS_HOST: cache
            REDIS_PORT: 6379
            REDIS_PASS: password

            NEO4J_URL: bolt://neo4j:7687
            NEO4J_USERNAME: neo4j
            NEO4J_PASSWORD: password
        networks:
            - follow-network
            - nginx-network
            - redis-network

    feed-mongo:
        image: mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: feedDb
        networks:
            - feed-network
    feed-service:
        image: sjkchang/chatwave-feed-service
        restart: always
        depends_on:
            - rabbitmq
        environment:
            AUTH_SERVER_URL: ${AUTH0_SERVER_URL}
            AUTH_CLIENT_ID: ${AUTH0_INTERFACE_CLIENT_ID}

            MONGO_URL: mongodb://feed-mongo
            MONGO_USERNAME: root
            MONGO_PASSWORD: password
            MONGO_DB_NAME: feedDb

            AMQP_URL: amqp://rabbitmq

            FOLLOW_SERVICE_URL: http://follow-service:3000
            FOLLOW_SERVICE_BASE_PATH: /
        networks:
            - feed-network
            - rabbit-network
            - follow-network
            - nginx-network

    interface:
        image: sjkchang/chatwave-interface
        ports:
            - "3000:3000"
        environment:
            API_BASE_URL: "http://nginx:80"

            AUTH0_SECRET: ${AUTH0_SECRET}
            AUTH0_BASE_URL: http://localhost:3000
            AUTH0_ISSUER_BASE_URL: ${AUTH0_SERVER_URL}
            AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
            AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}

            AUTH0_MANAGEMENT_CLIENT_ID: ${AUTH0_MANAGEMENT_CLIENT_ID}
            AUTH0_MANAGEMENT_CLIENT_SECRET: ${AUTH0_MANAGEMENT_CLIENT_SECRET}
            AUTH0_MANAGEMENT_AUDIENCE: ${AUTH0_MANAGEMENT_AUDIENCE}

            OPENAI_API_KEY: ${OPENAI_API_KEY}
        networks:
            - nginx-network

volumes:
    cache:
        driver: local

networks:
    post-network:
        driver: bridge
    follow-network:
        driver: bridge
    feed-network:
        driver: bridge
    rabbit-network:
        driver: bridge
    nginx-network:
        driver: bridge
    redis-network:
        driver: bridge
